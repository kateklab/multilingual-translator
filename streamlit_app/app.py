import streamlit as st
import requests

st.set_page_config(page_title="–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", layout="centered")

st.title("üåç –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ (Streamlit + FastAPI)")
st.write("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å: Streamlit, –ø–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ FastAPI + –º–æ–¥–µ–ª—å mBART")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state
if "translated_text" not in st.session_state:
    st.session_state.translated_text = ""
if "reversed_text" not in st.session_state:
    st.session_state.reversed_text = ""

# –í–≤–æ–¥ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
input_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞:")

# –í—ã–±–æ—Ä —è–∑—ã–∫–æ–≤
col1, col2 = st.columns(2)
with col1:
    src_lang = st.selectbox("–ò—Å—Ö–æ–¥–Ω—ã–π —è–∑—ã–∫", ["en_XX", "ru_RU", "fr_XX", "de_DE", "es_XX"])
with col2:
    tgt_lang = st.selectbox("–¶–µ–ª–µ–≤–æ–π —è–∑—ã–∫", ["en_XX", "ru_RU", "fr_XX", "de_DE", "es_XX"])

# –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
if st.button("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏"):
    if input_text.strip():
        try:
            response = requests.post("http://localhost:8000/translate", json={
                "text": input_text,
                "source_lang": src_lang,
                "target_lang": tgt_lang
            })
            if response.status_code == 200:
                st.session_state.translated_text = response.json()["translated_text"]
                st.session_state.reversed_text = ""
            else:
                st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API.")
        except Exception as e:
            st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É FastAPI: {e}")
    else:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞
if st.session_state.translated_text:
    st.markdown("#### ‚úÖ –ü–µ—Ä–µ–≤–æ–¥:")
    st.success(st.session_state.translated_text)

    # –ö–Ω–æ–ø–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞
    if st.button("–û–±—Ä–∞—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥"):
        try:
            rev_response = requests.post("http://localhost:8000/translate", json={
                "text": st.session_state.translated_text,
                "source_lang": tgt_lang,
                "target_lang": src_lang
            })
            if rev_response.status_code == 200:
                st.session_state.reversed_text = rev_response.json()["translated_text"]
            else:
                st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–µ—Ä–µ–≤–æ–¥–µ.")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API: {e}")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞
if st.session_state.reversed_text:
    st.markdown("#### üîÅ –û–±—Ä–∞—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥:")
    st.info(st.session_state.reversed_text)
